---
import IconChevronLeft from "@/assets/icons/IconChevronLeft.svg";
---

<!-- 回到顶部按钮（样式参考 MusicPlayer 最小化按钮） -->
<div
  id="btt-btn-container"
  class="fixed bottom-24 right-5 z-50 transition-all duration-200 ease-in-out opacity-0 translate-y-14"
>
  <button
    type="button"
    data-button="back-to-top"
    aria-label="返回顶部"
    class="content-card group flex items-center justify-center cursor-pointer rounded-xl transition-all duration-200 hover:bg-accent/20"
    style="width: 3.5rem; height: 3.5rem;"
  >
    <IconChevronLeft
      aria-hidden="true"
      class="text-accent transition-transform duration-200 group-hover:scale-110 rotate-90"
      style="width: 1.5rem; height: 1.5rem;"
    />
  </button>
  
</div>

<script is:inline data-astro-rerun>
  /** Scrolls the document to the top when
   * the "Back to Top" button is clicked. */
  function backToTop() {
    const rootElement = document.documentElement;
    const btnContainer = document.querySelector("#btt-btn-container");
    const backToTopBtn = document.querySelector("[data-button='back-to-top']");

    if (!rootElement || !btnContainer || !backToTopBtn)
      return;

    // Attach click event handler for back-to-top button
    backToTopBtn.addEventListener("click", () => {
      // 优先使用平滑滚动
      if ("scrollTo" in window) {
        window.scrollTo({ top: 0, behavior: "smooth" });
      } else {
        // 回退方案
        document.body.scrollTop = 0; // For Safari
        document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera
      }
    });

    // Handle button visibility according to scroll position
    let lastVisible = null;
    function handleScroll() {
      const scrollTotal = rootElement.scrollHeight - rootElement.clientHeight;
      const scrollTop = rootElement.scrollTop;

      const isVisible = scrollTop / scrollTotal > 0.3;

      if (isVisible !== lastVisible) {
        btnContainer.classList.toggle("opacity-100", isVisible);
        btnContainer.classList.toggle("translate-y-0", isVisible);
        btnContainer.classList.toggle("opacity-0", !isVisible);
        btnContainer.classList.toggle("translate-y-14", !isVisible);
        lastVisible = isVisible;
      }
    }

    let ticking = false;
    document.addEventListener("scroll", () => {
      if (!ticking) {
        window.requestAnimationFrame(() => {
          handleScroll();
          ticking = false;
        });
        ticking = true;
      }
    });
  }

  /** 防止回顶按钮与目录按钮遮挡 */
  function positionAdjustment() {
    const tocButton = document.getElementById("toc-button");
    const mobileFloat = document.getElementById("mobile-toc-float");
    const bttButton = document.getElementById("btt-btn-container");

    if (!bttButton) return;

    // 当组件不存在时，保持默认位置
    if (!tocButton || !mobileFloat) {
      bttButton.classList.remove("bottom-5");
      bttButton.classList.add("bottom-24");
      return;
    }

    const btnStyle = window.getComputedStyle(tocButton);
    const parentStyle = window.getComputedStyle(mobileFloat);

    const isButtonRendered = btnStyle.display !== "none"; // 最小化状态下是 flex，展开时为 none
    const isParentVisible = parentStyle.visibility !== "hidden" && parseFloat(parentStyle.opacity || "1") > 0.05;
    const shouldAvoidOverlap = isButtonRendered && isParentVisible;

    if (shouldAvoidOverlap) {
      bttButton.classList.remove("bottom-5");
      bttButton.classList.add("bottom-24");
    } else {
      bttButton.classList.remove("bottom-24");
      bttButton.classList.add("bottom-5");
    }
  }

  positionAdjustment();
  backToTop();

  window.addEventListener("resize", () => positionAdjustment());

  // 监听移动目录容器的 class/style 变化，以便及时调整位置
  const mobileFloat = document.getElementById("mobile-toc-float");
  if (mobileFloat && "MutationObserver" in window) {
    const mo = new MutationObserver(() => positionAdjustment());
    mo.observe(mobileFloat, { attributes: true, attributeFilter: ["class", "style"] });
  }

  // 页面切换（Astro 过渡）后也重新计算
  document.addEventListener("astro:page-load", positionAdjustment);
  document.addEventListener("astro:after-swap", positionAdjustment);
</script>
